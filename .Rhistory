currentFolder = currentFolder.replace("\\", "/")
currentFolder = currentFolder.replace(local, remoto)
print(currentFolder)
setwd("D:/GoogleDrive/Tabstat/Cursos")
setwd("D:/GoogleDrive/Tabstat/Cursos/Word/estilos-toc")
archivos <- dir()
grep("md", archivos)
archivos[grep("md", archivos)]
archivos <- archivos[grep("md", archivos)]
file.choose(new = TRUE)
md <- archivos
txtmd <- readLines(file.path(getwd(), md), encoding = 'UTF-8')
# Para cargar un poco mas facil el curso
# Hay que estar en el directorio desde antes
library(markdown)
mdfile <- file.path(getwd(), md)
mdfile
library(stringr)
htmlfile <- str_replace(mdfile, "md", "html")
htmlfile
markdownToHTML(file = mdfile, output = htmlfile)
source('D:/GoogleDrive/Tabstat/App/ayuda.r')
source('D:/GoogleDrive/Tabstat/App/ayuda.r')
source('D:/GoogleDrive/Tabstat/App/ayuda.r')
mdfile
htmlfile
markdownToHTML(file = mdfile, output = htmlfile)
markdownToHTML(file = mdfile, output = htmlfile)
markdownToHTML(file = mdfile, output = htmlfile, fragment.only = TRUE)
# Corregir las imagenes
mdText <- readLines(mdfile, encoding = "UTF-8")
mdText <- str_replace_all(mdText, localdir, remotedir)
# Para cargar un poco mas facil el curso
# Hay que estar en el directorio desde antes
rm(list=ls())
# Para cargar un poco mas facil el curso
# Hay que estar en el directorio desde antes
rm(list=ls())
library(markdown)
library(stringr)
setwd("D:/GoogleDrive/Tabstat/Cursos")
# Antecedentes
archivos <- dir()
archivos <- archivos[grep("md", archivos)]
localdir <- "D:/GoogleDrive/Tabstat/Cursos"
remotedir <- "https://tabstat.net/cursos"
mdfile   <- file.path(getwd(), md)
htmlfile <- str_replace(mdfile, "md", "html")
library(markdown)
library(stringr)
setwd("D:/GoogleDrive/Tabstat/Cursos")
setwd("D:/GoogleDrive/Tabstat/Cursos/Word/estilos-toc")
# Antecedentes
archivos <- dir()
archivos <- archivos[grep("md", archivos)]
localdir <- "D:/GoogleDrive/Tabstat/Cursos"
remotedir <- "https://tabstat.net/cursos"
md <- archivos
mdfile   <- file.path(getwd(), md)
htmlfile <- str_replace(mdfile, "md", "html")
# Corregir las imagenes
mdText <- readLines(mdfile, encoding = "UTF-8")
mdText <- str_replace_all(mdText, localdir, remotedir)
mdText
localdir <- "D:\\GoogleDrive\\Tabstat\\Cursos"
remotedir <- "https://tabstat.net/cursos"
mdText <- readLines(mdfile, encoding = "UTF-8")
mdText <- str_replace_all(mdText, localdir, remotedir)
mdText
mdText <- str_replace(mdText, localdir, remotedir)
mdText <- gsub(localdir, remotedir, mdText)
mdText
localdir
mdText[42]
gsub("\\", "./", mdText[42])
gsub("\\", "\/", mdText[42])
gsub("\\", "\\/", mdText[42])
print("\")
}
print("\\")
print("\\\")
}
print(".\")
}
print(".\")
print("\\")
print("\\")
print("\\")
print("\")
print("\\\")
print("\\\\")
print("\\")
cat("\\")
gsub("\\\\", "/", mdText[42])
gsub("\\\\", "/", mdText)
mdText
mdText
gsub("\\\\", "/", mdText)
mdText <- readLines(mdfile, encoding = "UTF-8")
mdText <- gsub("\\\\", "/", mdText)
mdText <- gsub(localdir, remotedir, mdText)
mdText
localdir <- "D:/GoogleDrive/Tabstat/Cursos"
# Corregir las imagenes
mdText <- readLines(mdfile, encoding = "UTF-8")
mdText <- gsub("\\\\", "/", mdText)
mdText <- gsub(localdir, remotedir, mdText)
mdText[42]
# Corregir las imagenes
mdText <- readLines(mdfile, encoding = "UTF-8")
mdText[42]
mdText <- gsub("\\\\", "/", mdText)
mdText[42]
gsub(localdir, remotedir, mdText[42])
mdText
mdText <- readLines(mdfile, encoding = "UTF-8")
mdText <- gsub("\\\\", "/", mdText)
mdText <- gsub(localdir, remotedir, mdText)
View(mdText)
mdText <- readLines(mdfile, encoding = "UTF-8")
mdText <- gsub("\\\\", "/", mdText)
mdText <- gsub(localdir, remotedir, mdText)
# Corregir las imagenes
mdText <- readLines(mdfile, encoding = "UTF-8")
mdText <- str_replace_all(mdText, "\\\\", "/")
mdText
mdText <- str_replace_all(mdText, localdir, remotedir)
mdText <- readLines(mdfile, encoding = "UTF-8")
mdText <- str_replace_all(mdText, "\\\\", "/")
mdText <- str_replace_all(mdText, localdir, remotedir)
mdText
remotedir <- "https://tabstat.net/cursos/"
mdText <- readLines(mdfile, encoding = "UTF-8")
mdText <- str_replace_all(mdText, "\\\\", "/")
mdText <- str_replace_all(mdText, localdir, remotedir)
mdText[42]
# Transformar
markdownToHTML(file = mdfile, output = htmlfile, fragment.only = TRUE)
source('D:/GoogleDrive/Tabstat/App/ayuda.r')
setwd("D:/GoogleDrive/Tabstat/Cursos/Word/estilos-toc")
source('D:/GoogleDrive/Tabstat/App/ayuda.r')
getwd()
source('D:/GoogleDrive/Tabstat/App/ayuda.r')
source('D:/GoogleDrive/Tabstat/App/ayuda.r')
mdfile
# Corregir las imagenes
mdText <- readLines(mdfile, encoding = "UTF-8")
mdText
mdText[42]
mdText <- str_replace_all(mdText, "\\\\", "/")
mdText[42]
mdText <- str_replace_all(mdText, localdir, remotedir)
mdText[42]
mdText <- readLines(mdfile, encoding = "UTF-8")
mdText <- str_replace_all(mdText, "\\\\", "/")
mdText <- str_replace_all(mdText, localdir, remotedir)
mdText[42]
# Corregir las imagenes
mdText <- readLines(mdfile, encoding = "UTF-8")
mdText[42]
mdText <- str_replace_all(mdText, "\\\\", "/")
mdText[42]
localdir <- "D:/GoogleDrive/Tabstat/Cursos"
remotedir <- "https://tabstat.net/cursos"
mdText[42]
mdText <- str_replace_all(mdText, localdir, remotedir)
mdText[42]
source('D:/GoogleDrive/Tabstat/App/ayuda.r')
source('D:/GoogleDrive/Tabstat/App/ayuda.r')
source('D:/GoogleDrive/Tabstat/App/ayuda.r')
regth
md
tempFile <- file.path(getwd(), "temp.md")
tempFile
source('D:/GoogleDrive/Tabstat/App/ayuda.r')
# Corregir las imagenes
mdText <- readLines(mdfile, encoding = "CP1252")
mdText
mdText <- readLines(mdfile, encoding = "CP1252")
mdText[7]
mdText <- readLines(mdfile, encoding = "UTF-8")
mdText[7]
source('D:/GoogleDrive/Tabstat/App/ayuda.r')
setwd("D:/GoogleDrive/ExplorApp")
setwd("D:/GoogleDrive/ExplorApp")
excelFile <- 'excel_input.xlsx'
# Intentar leer el archivo
data <- tryCatch(
# try
data <- read.xlsx(archivo_excel,
detectDates = TRUE,
skipEmptyRows = TRUE,
skipEmptyCols = TRUE),
warning = function(w){
"warning"
},
error = function(e){
"error"
}
)
function(e){
"error"
}
data <- tryCatch(
# try
data <- read.xlsx(excelFile,
detectDates = TRUE,
skipEmptyRows = TRUE,
skipEmptyCols = TRUE),
warning = function(w){
"warning"
},
error = function(e){
"error"
}
)
data <- read.xlsx(excelFile,
detectDates = TRUE,
skipEmptyRows = TRUE,
skipEmptyCols = TRUE)
# Intentar leer el archivo
data <- tryCatch(
# try
data <- read.xlsx(excelFile,
detectDates = TRUE,
skipEmptyRows = TRUE,
skipEmptyCols = TRUE),
warning = function(w){
"warning"
},
error = function(e){
print("Error")
message(e)
}
)
# Intentar leer el archivo
data <- tryCatch(
# try
data <- read.xlsx(excelFile,
detectDates = TRUE,
skipEmptyRows = TRUE,
skipEmptyCols = TRUE),
warning = function(w){
"warning"
message(w)
},
error = function(e){
cat("Error al intentar leer el Excel\n")
message(e)
}
)
# Intentar leer el archivo
data <- tryCatch(
# try
data <- read.xlsx(excelFile,
detectDates = TRUE,
skipEmptyRows = TRUE,
skipEmptyCols = TRUE),
warning = function(w){
cat("> Warning al intentar leer Excel\n")
message(w)
},
error = function(e){
cat(paste0("> Error al intentar leer Excel ", excelFile))
message(e)
}
)
# Intentar leer el archivo
data <- tryCatch(
# Try part
data <- read.xlsx(excelFile,
detectDates = TRUE,
skipEmptyRows = TRUE,
skipEmptyCols = TRUE),
# Catch part
warning = function(w){
cat(paste0("> Warning al intentar leer Excel ", excelFile, '\n'))
message(w)
},
error = function(e){
cat(paste0("> Error al intentar leer Excel ", excelFile, '\n'))
message(e)
}
)
# Intentar leer el archivo
data <- tryCatch(
# Try part
data <- read.xlsx(excelFile,
detectDates = TRUE,
skipEmptyRows = TRUE,
skipEmptyCols = TRUE),
# Catch part
warning = function(w){
cat(paste0("> Warning al intentar leer Excel ", excelFile, '\n'))
message(w)
},
error = function(e){
cat(paste0("> Error al intentar leer Excel <", excelFile, '>\n'))
message(e)
}
)
# ----------------------------------------------------------------------------------------------- #
# ------ data01_excel -> Lectura del Excel inicial ---------------------------------------------- #
# ----------------------------------------------------------------------------------------------- #
# Data management 01 - Leer archivo de Excel
library( openxlsx)
# ----------------------------------------------------------------------------------------------- #
# ------ data01_excel -> Lectura del Excel inicial ---------------------------------------------- #
# ----------------------------------------------------------------------------------------------- #
# Data management 01 - Leer archivo de Excel
library(openxlsx)
# Intentar leer el archivo
data <- tryCatch(
# Try part
data <- read.xlsx(excelFile,
detectDates = TRUE,
skipEmptyRows = TRUE,
skipEmptyCols = TRUE),
# Catch part
warning = function(w){
cat(paste0("> Warning al intentar leer Excel ", excelFile, '\n'))
message(w)
},
error = function(e){
cat(paste0("> Error al intentar leer Excel <", excelFile, '>\n'))
message(e)
}
)
View(data)
source('D:/GoogleDrive/ExplorApp/funciones/data01_excel.R', echo=TRUE)
rm(list=ls())
source('D:/GoogleDrive/ExplorApp/funciones/data01_excel.R', echo=TRUE)
DM01_leerExcel(excelFile)
datos <- DM01_leerExcel(excelFile)
stop("Archivo no es un data.frame")
# Intentar leer el archivo
data <- tryCatch(
# Try part
data <- read.xlsx(excelFile,
detectDates = TRUE,
skipEmptyRows = TRUE,
skipEmptyCols = TRUE),
# Catch part
warning = function(w){
cat(paste0("> Warning al intentar leer Excel ", excelFile, '\n'))
message(w)
},
error = function(e){
cat(paste0("> Error al intentar leer Excel <", excelFile, '>\n'))
message(e)
}
)
str(data)
vars <- names(data)
vars
library(glue)
help(package='glue')
glue('# Resumen de inpección archivo {excelFile} \n')
glue('# Resumen de inpección archivo "{excelFile}" \n')
glue('# Resumen inpección archivo "{excelFile}" \n',
'El archivo se pudo leer de manera correcta, las principales caracteristicas son: \n',
'- Número de filas: {f} \n',
'- Número de columnas: {c} \n')
f <- nrow(data)
c <- ncol(data)
vars <- names(data)
glue('# Resumen inpección archivo "{excelFile}" \n',
'El archivo se pudo leer de manera correcta, las principales caracteristicas son: \n',
'- Número de filas: {f} \n',
'- Número de columnas: {c} \n')
glue('# Resumen inpección archivo "{excelFile}" \n',
'El archivo se pudo leer de manera correcta, las principales caracteristicas son: \n\n',
'- Número de filas: {f} \n',
'- Número de columnas: {c} \n',
'- Nombres de variable: {vars} \n')
vars2 <- paste(vars, collapse)
vars2 <- paste(vars, collapse = ',')
vars2 <- paste(vars, collapse = ', ')
glue('# Resumen inpección archivo "{excelFile}" \n',
'El archivo se pudo leer de manera correcta, las principales caracteristicas son: \n\n',
'- Número de filas: {f} \n',
'- Número de columnas: {c} \n',
'- Nombres de variable: {vars2} \n')
library(markdown)
header <- markdownToHTML(text = header)
header <- markdownToHTML(file = header)
header <- markdownToHTML(file = header, fragment.only = TRUE)
markdownToHTML(text = "Hello World!", fragment.only = TRUE)
header <- markdownToHTML(text = header, fragment.only = TRUE)
# Info
header <- glue('# Resumen inpección archivo "{excelFile}" \n',
'El archivo se pudo leer de manera correcta, las principales caracteristicas son: \n\n',
'- Número de filas: {f} \n',
'- Número de columnas: {c} \n',
'- Nombres de variable: {vars2} \n')
header <- markdownToHTML(text = header, fragment.only = TRUE)
header
writeLines('test.html', header)
writeLines(header, 'test.html')
# Info
resumen <- glue('# Resumen inpección archivo "{excelFile}" \n',
'El archivo se pudo leer de manera correcta, las principales caracteristicas son: \n\n',
'- Número de filas: {f} \n',
'- Número de columnas: {c} \n',
'- Nombres de variable: {vars2} \n')
resumen <- markdownToHTML(text = resumen, fragment.only = TRUE,
stylesheet = 'https://gist.githubusercontent.com/andyferra/2554919/raw/10ce87fe71b23216e3075d5648b8b9e56f7758e1/github.css')
writeLines(header, 'test.html')
head <- glue('<link rel="stylesheet"',
'href="', 'https://gist.githubusercontent.com/andyferra/2554919/raw/10ce87fe71b23216e3075d5648b8b9e56f7758e1/github.css','">')
head
head <- glue('<link rel="stylesheet" ',
'href="', 'https://gist.githubusercontent.com/andyferra/2554919/raw/10ce87fe71b23216e3075d5648b8b9e56f7758e1/github.css','">')
head
resumen <- glue('# Resumen inpección archivo "{excelFile}" \n',
'El archivo se pudo leer de manera correcta, las principales caracteristicas son: \n\n',
'- Número de filas: {f} \n',
'- Número de columnas: {c} \n',
'- Nombres de variable: {vars2} \n')
head <- glue('<link rel="stylesheet" ',
'href="', 'https://gist.githubusercontent.com/andyferra/2554919/raw/10ce87fe71b23216e3075d5648b8b9e56f7758e1/github.css','">')
resumen <- markdownToHTML(text = resumen, fragment.only = TRUE,
header = head)
writeLines(header, 'test.html')
# resumen <-
markdownToHTML(text = resumen, fragment.only = TRUE,
header = head)
head
# resumen <-
markdownToHTML(text = resumen, fragment.only = TRUE, header = head)
# resumen <-
print(markdownToHTML(text = resumen, fragment.only = TRUE, header = head))
# resumen <-
markdownToHTML(text = resumen, fragment.only = TRUE, header = head, output = 'test.html')
css <- readLines('https://gist.githubusercontent.com/andyferra/2554919/raw/10ce87fe71b23216e3075d5648b8b9e56f7758e1/github.css')
resumen <- glue('# Resumen inpección archivo "{excelFile}" \n',
'El archivo se pudo leer de manera correcta, las principales caracteristicas son: \n\n',
'- Número de filas: {f} \n',
'- Número de columnas: {c} \n',
'- Nombres de variable: {vars2} \n')
css <- readLines('https://gist.githubusercontent.com/andyferra/2554919/raw/10ce87fe71b23216e3075d5648b8b9e56f7758e1/github.css')
markdownToHTML(text = resumen,
fragment.only = TRUE,
header = head,
output = 'test.html',
stylesheet = css)
close.connection(css)
source('D:/GoogleDrive/ExplorApp/funciones/data01_excel.R', encoding = 'UTF-8', echo=TRUE)
data <- DM01_leerExcel(excelFile)
source('D:/GoogleDrive/ExplorApp/funciones/data02_DetectFactor.R', encoding = 'WINDOWS-1252', echo=TRUE)
names(data)
names(data[['datos']])
dmDetectFactor(data, Anemia)
dmDetectFactor(data, 'Anemia')
df <- data
var <- 'Anemia'
options(warn = -1)
varname <- var
var <- df[[var]]
nvar <- length(var)
data(mtcars)
mtcars
variables <- names(mtcars)
tdata <- t(mtcars)
View(tdata)
class(tdata)
tdata <- as.data.frame(t(mtcars), stringsAsFactors = FALSE)
# Crear un data.frame
datos <- data.frame(colores = c('Verde', 'Rojo', 'Azul', 'Amarillo', 'Blanco'),
numeros = c(1, 2, 3, 4, 5, 6),
factor  = factor(c('G1', 'G1', 'G1', 'G2', 'G2', 'G2'))
# Crear un data.frame
datos <- data.frame(colores = c('Verde', 'Rojo', 'Azul', 'Amarillo', 'Blanco'),
numeros = c(1, 2, 3, 4, 5, 6),
factor  = factor(c('G1', 'G1', 'G1', 'G2', 'G2', 'G2')))
# Crear un data.frame
datos <- data.frame(colores = c('Verde', 'Rojo', 'Azul', 'Amarillo', 'Blanco', 'Negro'),
numeros = c(1, 2, 3, 4, 5, 6),
factor  = factor(c('G1', 'G1', 'G1', 'G2', 'G2', 'G2')))
View(datos)
# Crear un data.frame
datos <- data.frame(colores = c('Verde', 'Rojo', 'Azul', 'Amarillo', 'Blanco', 'Negro'),
numeros = c(1, 2, 3, 4, 5, 6),
factor  = factor(c('G1', 'G1', 'G1', 'G2', 'G2', 'G2')))
str(datos)
Sys.getenv()
# Crear un data.frame
datos <- data.frame(colores = c('Verde', 'Rojo', 'Azul', 'Amarillo', 'Blanco', 'Negro'),
numeros = c(1, 2, 3, 4, 5, 6),
factor  = factor(c('G1', 'G1', 'G1', 'G2', 'G2', 'G2')),
stringsAsFactors = FALSE)
# Ver la estructura
str(datos)
# Crear un data.frame
datos <- data.frame(colores = c('Verde', 'Rojo', 'Azul', 'Amarillo', 'Blanco', 'Negro'),
numeros = c(1, 2, 3, 4, 5, 6),
factor  = factor(c('G1', 'G1', 'G1', 'G2', 'G2', 'G2')),
stringsAsFactors = FALSE)
# Ver la estructura
str(datos)
# Ver el data.frame
datos
# Crear un data.frame
datos <- data.frame(colores = c('Verde', 'Rojo', 'Azul', 'Amarillo', 'Blanco', 'Negro'),
numeros = c(1, 2, 3, 4, 5, 6),
factor  = factor(c('G1', 'G1', 'G1', 'A2', 'A2', 'A2')),
stringsAsFactors = FALSE)
# Ver la estructura
str(datos)
# Ver el data.frame
datos
summary(mtcars)
